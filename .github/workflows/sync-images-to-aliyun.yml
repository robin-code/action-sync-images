# 工作流名称
name: Sync-Images-to-AliyunCr-Example
# 工作流运行时显示名称
run-name: ${{ github.actor }} is Sync Images to Aliyun and private Harbor
# 怎样触发工作流
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# 工作流程任务（通常含有一个或多个步骤）
jobs:
  sync_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repos
        uses: actions/checkout@v4

      - name: Install Skopeo
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo
      # 添加调试步骤，确认文件位置
      - name: Debug - List Files
        run: |
          pwd
          ls -la

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Login to docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          registry: ${{ vars.DOCKER_REGISTRY }}

      - name: Use Skopeo Tools Sync Image to Aliyun Cr
        env:
          IMAGE_REGISTRY_NAME_SPACE: ${{ vars.DOCKER_REGISTRY }}/${{ vars.REGISTRY_NAME_SPACE }}
        run: bash scripts/sync_to_aliyun.sh

  cloudflare-tunnel:
    runs-on: ubuntu-latest
    needs: sync_images   # 依赖 build job 完成
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cloudflared
        uses: AnimMouse/setup-cloudflared@v2

      - name: Setup cloudflared tunnel
        uses: AnimMouse/setup-cloudflared/tunnel@v2
        with:
          cloudflare_tunnel_credential: ${{ secrets.CLOUDFLARE_TUNNEL_CREDENTIAL }}
          cloudflare_tunnel_configuration: ${{ vars.CLOUDFLARE_TUNNEL_CONFIGURATION }}
          cloudflare_tunnel_id: ${{ vars.CLOUDFLARE_TUNNEL_ID }}

      - name: Wait for tunnel to stabilize
        run: sleep 10

      - name: Sync to Harbor by Call Drone API via Cloudflare Tunnel
        run: |
          curl --location --request POST 'http://github.riji.life/api/repos/DevOps/action-sync-images/builds?branch=main' \
            --header 'Authorization: Bearer ${{ secrets.DRONE_API_TOKEN }}' \
            --header 'User-Agent: GitHubAction/1.0' \
            --header 'Accept: */*' \
            --header 'Host: github.riji.life' \
            --header 'Connection: keep-alive' \
            -v
