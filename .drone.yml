kind: pipeline
type: kubernetes
name: clean node1

steps:
  - name: upload delete-images.yaml to node1
    image: docker.riji.life/robin-public/appleboy/drone-scp
    settings:
      host: 10.0.0.111
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      source: delete-images.yaml
      target: /home/robin/
  - name: cleanup images on node1
    image: docker.riji.life/robin-public/appleboy/drone-ssh
    settings:
      host: 10.0.0.111
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      script:
        - |
          sudo sh -c "
            crictl rmi \$(cat /home/robin/delete-images.yaml) || true
            for img in \$(crictl images | grep '<none>' | awk '{print \$3}'); do
              crictl rmi \$img || true
            done
          "
---
kind: pipeline
type: kubernetes
name: clean node2
steps:
  - name: upload delete-images.yaml to node2
    image: docker.riji.life/robin-public/appleboy/drone-scp
    settings:
      host: 10.0.0.112
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      source: delete-images.yaml
      target: /home/robin/
  - name: cleanup images on node2
    image: docker.riji.life/robin-public/appleboy/drone-ssh
    settings:
      host: 10.0.0.112
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      script:
        - |
          sudo sh -c "
            crictl rmi \$(cat /home/robin/delete-images.yaml) || true
            for img in \$(crictl images | grep '<none>' | awk '{print \$3}'); do
              crictl rmi \$img || true
            done
          "
---
kind: pipeline
type: kubernetes
name: clean node3
steps:
  - name: upload delete-images.yaml to node3
    image: docker.riji.life/robin-public/appleboy/drone-scp
    settings:
      host: 10.0.0.113
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      source: delete-images.yaml
      target: /home/robin/
  - name: cleanup images on node3
    image: docker.riji.life/robin-public/appleboy/drone-ssh
    settings:
      host: 10.0.0.113
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      script:
        - |
          sudo sh -c "
            crictl rmi \$(cat /home/robin/delete-images.yaml) || true
            for img in \$(crictl images | grep '<none>' | awk '{print \$3}'); do
              crictl rmi \$img || true
            done
          "
---
kind: pipeline
type: kubernetes
name: clean node4
steps:
  - name: upload delete-images.yaml to node4
    image: docker.riji.life/robin-public/appleboy/drone-scp
    settings:
      host: 10.0.0.157
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      source: delete-images.yaml
      target: /home/robin/
  - name: cleanup images on node4
    image: docker.riji.life/robin-public/appleboy/drone-ssh
    settings:
      host: 10.0.0.157
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      script:
        - |
          sudo sh -c "
            crictl rmi \$(cat /home/robin/delete-images.yaml) || true
            for img in \$(crictl images | grep '<none>' | awk '{print \$3}'); do
              crictl rmi \$img || true
            done
          "
---
kind: pipeline
type: kubernetes
name: clean node5
steps:
  - name: upload delete-images.yaml to node5
    image: docker.riji.life/robin-public/appleboy/drone-scp
    settings:
      host: 10.0.0.158
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      source: delete-images.yaml
      target: /home/robin/
  - name: cleanup images on node5
    image: docker.riji.life/robin-public/appleboy/drone-ssh
    settings:
      host: 10.0.0.158
      username: robin
      port: 22
      key:
        from_secret: SSH_PRIVATE_KEY
      script:
        - |
          sudo sh -c "
            crictl rmi \$(cat /home/robin/delete-images.yaml) || true
            for img in \$(crictl images | grep '<none>' | awk '{print \$3}'); do
              crictl rmi \$img || true
            done
          " 
---
kind: pipeline
type: kubernetes
name: sync-images-to-harbor

trigger:
  branch:
    - main
  event:
    - push
    - custom

volumes:
  - name: shared
    host:
      path: /root/maven/cache
steps:
  - name: sync-images
    image: docker.riji.life/robin-public/quay.io/skopeo/stable:latest
    volumes:
      - name: shared
        path: /data
    environment:
      HARBOR_USERNAME:
        from_secret: HARBOR_USERNAME
      HARBOR_PASSWORD:
        from_secret: HARBOR_PASSWORD
      #原始镜像仓库
      IMAGE_REGISTRY_NAME_SPACE: registry.cn-hangzhou.aliyuncs.com/robin-public
      HARBOR_REGISTRY: docker.riji.life
      #自建harbor仓库地址
      HARBOR_IMAGE_REGISTRY_NAME_SPACE: docker.riji.life/robin-public
    commands:
      - echo "开始同步镜像到 Harbor..."
      - chmod +x ./scripts/sync_to_harbor.sh
      - ./scripts/sync_to_harbor.sh
      - cat /data/sync_result.txt
  - name: comment synced images
    image: docker.riji.life/robin-public/alpine
    volumes:
      - name: shared
        path: /data
    commands:
      - result=$(cat /data/sync_result.txt)
      - echo "结果是：$result"
      - |
        if [ "$result" = "none" ]; then
          echo "✅ 没有需要同步的镜像，跳过 image.yaml 修改"
          exit 0
        fi
      - cp image.yaml image.yaml.bak
      - awk '/^[[:space:]]*#/ || /^[[:space:]]*$/ {print $0; next} {print "# "$0}' image.yaml.bak > image.yaml

  - name: commit and push
    image: docker.riji.life/robin-public/alpine/git
    volumes:
      - name: shared
        path: /data
    environment:
      GIT_USERNAME:
        from_secret: GIT_USERNAME
      GIT_TOKEN:
        from_secret: GIT_TOKEN
      DRONE_BOT_BOT_EMAIL:
        from_secret: DRONE_BOT_BOT_EMAIL
      DRONE_BOT_BOT_NAME:
        from_secret: DRONE_BOT_BOT_NAME
    commands:
      - result=$(cat /data/sync_result.txt)
      - echo "结果是：$result"
      - |
        if [ "$result" = "none" ]; then
          echo "✅ 没有需要同步的镜像，跳过 image.yaml 修改"
          exit 0
        fi
      - git add image.yaml
      - 'git commit --author="$DRONE_BOT_BOT_NAME <$DRONE_BOT_BOT_EMAIL>" -m "ci: 标记已同步的镜像为注释状态" || echo "No changes to commit"'
      - git remote set-url origin https://$GIT_USERNAME:$GIT_TOKEN@git.riji.life/DevOps/action-sync-images.git
      - git push origin HEAD:${DRONE_BRANCH}
